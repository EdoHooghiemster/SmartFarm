{"ast":null,"code":"import _slicedToArray from \"C:\\\\Git\\\\SmartFarm\\\\Front-end\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Git\\\\SmartFarm\\\\Front-end\\\\my-app\\\\src\\\\components\\\\Planten.js\";\nimport React, { Component } from 'react';\nimport { Row } from 'react-bootstrap';\nimport axios from 'axios'; //Planten Pagina\n\nexport class Planten extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPlants = async () => {\n      try {\n        return await axios.get('https://europe-west1-smartbroeikas.cloudfunctions.net/api/getplants');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.logPlants = async () => {\n      const plants = this.getPlants().then(response => {\n        if (response.data) {\n          this.setState({\n            plants: response\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      plants: []\n    };\n  }\n\n  componentWillMount() {\n    this.logPlants();\n  }\n\n  render() {\n    console.log(this.state.plants);\n    const test = this.state.plants.data;\n    const items = [];\n\n    for (const _ref of this.state.plants.data.entries()) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      const index = _ref2[0];\n      const value = _ref2[1];\n      items.push(React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, value)));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Planten\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"test\"), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"dfd\")));\n  }\n\n}\nexport default Planten;","map":{"version":3,"sources":["C:/Git/SmartFarm/Front-end/my-app/src/components/Planten.js"],"names":["React","Component","Row","axios","Planten","constructor","props","getPlants","get","error","console","logPlants","plants","then","response","data","setState","catch","log","state","componentWillMount","render","test","items","entries","index","value","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,SARmB,GAQP,YAAY;AACpB,UAAI;AACF,eAAO,MAAMJ,KAAK,CAACK,GAAN,CAAU,qEAAV,CAAb;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACJ,KAdkB;;AAAA,SAgBnBE,SAhBmB,GAgBP,YAAY;AACpB,YAAMC,MAAM,GAAG,KAAKL,SAAL,GACZM,IADY,CACPC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,IAAb,EAAmB;AACf,eAAKC,QAAL,CAAc;AACVJ,YAAAA,MAAM,EAAEE;AADE,WAAd;AAGH;AACF,OAPY,EAQZG,KARY,CAQNR,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACQ,GAAR,CAAYT,KAAZ;AACD,OAVY,CAAf;AAWD,KA5BgB;;AAGf,SAAKU,KAAL,GAAa;AACTP,MAAAA,MAAM,EAAE;AADC,KAAb;AAGD;;AAwBDQ,EAAAA,kBAAkB,GAAG;AACnB,SAAKT,SAAL;AACD;;AAEHU,EAAAA,MAAM,GAAG;AACLX,IAAAA,OAAO,CAACQ,GAAR,CAAY,KAAKC,KAAL,CAAWP,MAAvB;AACA,UAAMU,IAAI,GAAG,KAAKH,KAAL,CAAWP,MAAX,CAAkBG,IAA/B;AAEA,UAAMQ,KAAK,GAAG,EAAd;;AAEA,uBAA6B,KAAKJ,KAAL,CAAWP,MAAX,CAAkBG,IAAlB,CAAuBS,OAAvB,EAA7B,EAA+D;AAAA;;AAAA,YAAnDC,KAAmD;AAAA,YAA5CC,KAA4C;AAC3DH,MAAAA,KAAK,CAACI,IAAN,CAAW,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAI,QAAA,GAAG,EAAEF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBC,KAAjB,CAAL,CAAX;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EASI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CATJ,CADJ;AAgBH;;AA7DkC;AAgEvC,eAAetB,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Row } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\n//Planten Pagina\r\nexport class Planten extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            plants: []\r\n        }\r\n      }\r\n\r\n    getPlants = async () => {\r\n        try {\r\n          return await axios.get('https://europe-west1-smartbroeikas.cloudfunctions.net/api/getplants')\r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n    }\r\n\r\n    logPlants = async () => {\r\n        const plants = this.getPlants()\r\n          .then(response => {\r\n            if (response.data) {\r\n                this.setState({\r\n                    plants: response\r\n                })\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n      }\r\n      \r\n      componentWillMount() {\r\n        this.logPlants()\r\n      }\r\n\r\n    render() {\r\n        console.log(this.state.plants);\r\n        const test = this.state.plants.data;\r\n\r\n        const items = []\r\n\r\n        for (const [index, value] of this.state.plants.data.entries()) {\r\n            items.push(<Row><li key={index}>{value}</li></Row>)\r\n        }\r\n        \r\n        return ( \r\n            <div>\r\n                <h2>Planten</h2>\r\n                {/* {Object.keys(this.state.plants.data).map((keyName, i) => {\r\n                    console.log('test');\r\n                    return <Row>\r\n                                <div className=\"col\">key: {i} Name: {this.state.plants[keyName].data} </div>\r\n                            </Row>\r\n                })} */}\r\n\r\n                <Row>\r\n                    <div className=\"col\">test</div>\r\n                    <div className=\"col\">dfd</div> \r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Planten\r\n"]},"metadata":{},"sourceType":"module"}