{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\SmartFarm\\\\Front-end\\\\my-app\\\\src\\\\components\\\\Planten.js\";\nimport React, { Component } from 'react';\nimport { Row } from 'react-bootstrap';\nimport axios from 'axios'; //Planten Pagina\n\nexport class Planten extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPlants = async () => {\n      try {\n        return await axios.get('https://europe-west1-smartbroeikas.cloudfunctions.net/api/getplants');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.logPlants = async () => {\n      const plants = this.getPlants().then(response => {\n        if (response.data) {\n          let listTest = [];\n          response.data.map(function (item) {\n            listTest.push(item);\n          });\n          this.setState({\n            plants: listTest\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      plants: []\n    };\n  }\n\n  componentWillMount() {\n    this.logPlants();\n  }\n\n  render() {\n    console.log(this.state.plants);\n    const plants = this.state.plants.map((item, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"PlantId\"), React.createElement(\"div\", {\n        key: index,\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, item.plantId)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Plantsoort\"), React.createElement(\"div\", {\n        key: index,\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, item.body)));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Planten\"), plants, React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      variant: \"top\",\n      src: \"holder.js/100px180\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Card Title\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Go somewhere\"))));\n  }\n\n}\nexport default Planten;","map":{"version":3,"sources":["C:/Git/SmartFarm/Front-end/my-app/src/components/Planten.js"],"names":["React","Component","Row","axios","Planten","constructor","props","getPlants","get","error","console","logPlants","plants","then","response","data","listTest","map","item","push","setState","catch","log","state","componentWillMount","render","index","plantId","body","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,SARmB,GAQP,YAAY;AACpB,UAAI;AACF,eAAO,MAAMJ,KAAK,CAACK,GAAN,CAAU,qEAAV,CAAb;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACJ,KAdkB;;AAAA,SAgBnBE,SAhBmB,GAgBP,YAAY;AACpB,YAAMC,MAAM,GAAG,KAAKL,SAAL,GACZM,IADY,CACPC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,IAAb,EAAmB;AACf,cAAIC,QAAQ,GAAG,EAAf;AACAF,UAAAA,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkB,UAASC,IAAT,EAAe;AAC7BF,YAAAA,QAAQ,CAACG,IAAT,CAAcD,IAAd;AACH,WAFD;AAIA,eAAKE,QAAL,CAAc;AACVR,YAAAA,MAAM,EAAEI;AADE,WAAd;AAGH;AACF,OAZY,EAaZK,KAbY,CAaNZ,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACY,GAAR,CAAYb,KAAZ;AACD,OAfY,CAAf;AAgBD,KAjCgB;;AAGf,SAAKc,KAAL,GAAa;AACTX,MAAAA,MAAM,EAAE;AADC,KAAb;AAGD;;AA6BDY,EAAAA,kBAAkB,GAAG;AACnB,SAAKb,SAAL;AACD;;AAEHc,EAAAA,MAAM,GAAG;AACLf,IAAAA,OAAO,CAACY,GAAR,CAAY,KAAKC,KAAL,CAAWX,MAAvB;AAEA,UAAMA,MAAM,GAAG,KAAKW,KAAL,CAAWX,MAAX,CAAkBK,GAAlB,CAAsB,CAACC,IAAD,EAAOQ,KAAP,KAAiB;AAClD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,SAAS,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCR,IAAI,CAACS,OAAvC,CAFJ,CADJ,EAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAK,QAAA,GAAG,EAAED,KAAV;AAAiB,QAAA,SAAS,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCR,IAAI,CAACU,IAAvC,CAFJ,CALJ,CADJ;AAYH,KAbc,CAAf;AAeA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKhB,MAFL,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEiB,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAC,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAFJ,EAMI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,CAFJ,CAJJ,CADJ;AAkBH;;AA5EkC;AA+EvC,eAAezB,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Row } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\n//Planten Pagina\r\nexport class Planten extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            plants: []\r\n        }\r\n      }\r\n\r\n    getPlants = async () => {\r\n        try {\r\n          return await axios.get('https://europe-west1-smartbroeikas.cloudfunctions.net/api/getplants')\r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n    }\r\n\r\n    logPlants = async () => {\r\n        const plants = this.getPlants()\r\n          .then(response => {\r\n            if (response.data) {\r\n                let listTest = [];\r\n                response.data.map(function(item) {\r\n                    listTest.push(item);\r\n                })\r\n\r\n                this.setState({\r\n                    plants: listTest\r\n                })\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n      }\r\n      \r\n      componentWillMount() {\r\n        this.logPlants()\r\n      }\r\n\r\n    render() {\r\n        console.log(this.state.plants);\r\n        \r\n        const plants = this.state.plants.map((item, index) => {\r\n            return (\r\n                <div>\r\n                    <Row>\r\n                        <div className=\"col\">PlantId</div>\r\n                        <div key={index} className=\"col\">{item.plantId}</div> \r\n                    </Row>\r\n                    <Row>\r\n                        <div className=\"col\">Plantsoort</div>\r\n                        <div key={index} className=\"col\">{item.body}</div> \r\n                    </Row>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return ( \r\n            <div>\r\n                <h2>Planten</h2>\r\n                {plants}\r\n\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n                    <Card.Body>\r\n                        <Card.Title>Card Title</Card.Title>\r\n                        <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk of\r\n                        the card's content.\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\">Go somewhere</Button>\r\n                    </Card.Body>\r\n                    </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Planten\r\n"]},"metadata":{},"sourceType":"module"}